swagger: '2.0'
info:
  version: 1.0.0
  title: Award API
  description: Service to handle Awards API
  contact:
    email: toadheteguh@gmail.com

consumes:
  - application/json
produces:
  - application/json
parameters:
  Authorization:
    name: Authorization
    type: string
    in: header
    required: true
    description: JWT Authorization
  AuthorizationOptional:
    name: Authorization
    type: string
    in: header
    required: false
    description: JWT Authorization

securityDefinitions:
  JWT:
    description: |
      For accessing the API a valid JWT token must be passed in all the queries in
      the 'Authorization' header.


      A valid JWT token is generated by the API and returned as answer of a call
      to the login route giving a valid credential.

      The following syntax must be used in the 'Authorization' header :
          Bearer xxxxxx.yyyyyyy.zzzzzz

    type: apiKey
    name: Authorization
    in: header

paths:
  /award:
    post:
      operationId: addAward
      tags: 
        - Award
      summary: Create Award
      description: Create Award
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Authorization'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/award'
      responses:
        201:
          description: Successful response
          schema:
            $ref: "#/definitions/award"
        400:
          description: Bad Request / Validation exception
          schema:
            $ref: '#/definitions/error400'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/error404'
        default:
          description: Error
          schema:
            $ref: '#/definitions/errorDefault'

    get:
      operationId: getAward
      tags: 
        - Award
      summary: Get All Awards
      description: Get All Awards
      parameters:
        - $ref: '#/parameters/Authorization'
        - in: query
          name: type
          type: string
        - in: query
          name: point
          type: string

          description: |
            valid fields:
              - "type"
              - "point"

            valid operator:
              - '='
              - '&'

              full example:
                - "/award?type=Vouchers&type=Products"
                - "/award?type=Vouchers&point=80000"  
      produces:
        - application/json
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/award"
        400:
          description: Bad Request / Validation exception
          schema:
            $ref: '#/definitions/error400'
        403:
          description: Forbidden access
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/error404'
        default:
          description: Error
          schema:
            $ref: '#/definitions/errorDefault'
  /award/{id}:  
    get:
      operationId: getAwardById
      tags: 
        - Award
      summary: Get Award By Id
      description: Get Award By Id
      parameters:
        - $ref: '#/parameters/Authorization'
        - in: path
          name: id
          type: string
          required: true
      produces:
        - application/json
      responses: 
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/award"
        400:
          description: Bad Request / Validation exception
          schema:
            $ref: '#/definitions/error400'
        403: 
          description: Forbidden access
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/error404'
        default:
          description: Error
          schema:
            $ref: '#/definitions/errorDefault'
    put:
      operationId: updateAwardById
      tags: 
        - Award
      summary: Update Award By Id
      description: Update Award By Id
      parameters:
        - $ref: '#/parameters/Authorization'
        - in: path
          name: id
          type: string
          required: true
        - in: body
          name: body
          required: true
          schema: 
            $ref: '#/definitions/award'
      produces:
        - application/json
      responses: 
        200:
          description: Successful response
          schema: 
            $ref: "#/definitions/award"
        400:
          description: Bad Request / Validation exception
          schema:
            $ref: '#/definitions/error400'
        403: 
          description: Forbidden access
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/error404'
        default:
          description: Error
          schema:
            $ref: '#/definitions/errorDefault'
    delete:
      operationId: deleteAward
      tags:
        - Award
      summary: Delete Award By Id
      description: Delete Award By Id
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Authorization'
        - in: path
          name: id
          type: string
          required: true
      responses:
        204:
          description: Successful
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/error404'
        default:
          description: Error
          schema:
            $ref: '#/definitions/errorDefault'

  /user:
    post:
      operationId: addUser
      tags: 
        - User
      summary: Create User
      description: Create User
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/user'
      responses:
        201:
          description: Successful response
          schema:
            $ref: "#/definitions/user"
        400:
          description: Bad Request / Validation exception
          schema:
            $ref: '#/definitions/error400'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/error404'
        default:
          description: Error
          schema:
            $ref: '#/definitions/errorDefault'
    
    get:
      operationId: getUser
      tags: 
        - User
      summary: Get All Users
      description: Get All Users
      parameters:
        - $ref: '#/parameters/Authorization'
        - in: query
          name: email
          type: string

          description: |
            valid fields:
              - "email"

            valid operator:
              - '='
              - '&'

              full example:
                - "/user?email=john@doe.com"
      produces:
        - application/json
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/user"
        400:
          description: Bad Request / Validation exception
          schema:
            $ref: '#/definitions/error400'
        403:
          description: Forbidden access
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/error404'
        default:
          description: Error
          schema:
            $ref: '#/definitions/errorDefault'

  /user/{id}:  
    get:
      operationId: getUserById
      tags: 
        - User
      summary: Get User By Id
      description: Get User By Id
      parameters:
        - $ref: '#/parameters/Authorization'
        - in: path
          name: id
          type: string
          required: true
      produces:
        - application/json
      responses: 
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/user"
        400:
          description: Bad Request / Validation exception
          schema:
            $ref: '#/definitions/error400'
        403: 
          description: Forbidden access
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/error404'
        default:
          description: Error
          schema:
            $ref: '#/definitions/errorDefault'
    put:
      operationId: updateUserById
      tags: 
        - User
      summary: Update User By Id
      description: Update User By Id
      parameters:
        - $ref: '#/parameters/Authorization'
        - in: path
          name: id
          type: string
          required: true
        - in: body
          name: body
          required: true
          schema: 
            $ref: '#/definitions/user'
      produces:
        - application/json
      responses: 
        200:
          description: Successful response
          schema: 
            $ref: "#/definitions/user"
        400:
          description: Bad Request / Validation exception
          schema:
            $ref: '#/definitions/error400'
        403: 
          description: Forbidden access
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/error404'
        default:
          description: Error
          schema:
            $ref: '#/definitions/errorDefault'
    delete:
      operationId: deleteUserById
      tags:
        - User
      summary: Delete User By Id
      description: Delete User By Id
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Authorization'
        - in: path
          name: id
          type: string
          required: true
      responses:
        204:
          description: Successful
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/error404'
        default:
          description: Error
          schema:
            $ref: '#/definitions/errorDefault'

  /user/signin: 
    post:
      operationId: signin
      tags: 
        - User
      summary: User signin
      description: User signin
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/signin'
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/token"
        400:
          description: Bad Request / Validation exception
          schema:
            $ref: '#/definitions/error400'
        404:
          description: Resource Not Found
          schema:
            $ref: '#/definitions/error404'
        default:
          description: Error
          schema:
            $ref: '#/definitions/errorDefault'

definitions:
  award:
    type: object
    required:
      - type
      - point
      - name
    properties:
      id:
        type: string
        readOnly: true
        example: 32c8f61e-f59e-48eb-820e-90d4ea66af1a
      type:
          type: string
          enum:
            - Vouchers
            - Products
            - Giftcard
          example: Vouchers
      point:
          type: number
          example: 50000
      name:
        type: string
        example: Old Fashion Cake
      imageUrl:
        type: string
        example: test.com
      createdAt: 
        type: string
        format: "date-time"
        example: '2023-04-20T23:34:38Z'
        readOnly: true
      updatedAt: 
        type: string
        format: "date-time"
        example: '2023-04-20T23:34:38Z'
        readOnly: true

  user:
    type: object
    required:
      - email
    properties:
      id:
        type: string
        readOnly: true
        example: 32c8f61e-f59e-48eb-820e-90d4ea66af1a
      email:
        type: string
        example: johndoe@test.com
      name:
        type: string
        example: john doe
      createdAt: 
        type: string
        format: "date-time"
        example: '2023-04-20T23:34:38Z'
        readOnly: true
      updatedAt: 
        type: string
        format: "date-time"
        example: '2023-04-20T23:34:38Z'
        readOnly: true

  signin:
    type: object
    required:
      - "email"
    properties:
      email: 
        type: "string"
        example: john@doe.com
  
  token:
    type: object
    required:
      - "token"
    properties:
      token: 
        type: "string"
        example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXUyJ9.eyJ1c2VyIjp7ImlkIj

  error400:
    type: object
    properties:
      code:
        type: string
        example: REQUIRED
      message:
        type: string
        example: Bad Request - Your request is missing parameters. Please verify and resubmit
  error404:
    type: object
    properties:
      message:
        type: string
        example: Resource Not Found

  errorDefault:
    type: object
    properties:
      code:
        type: string
        example: INTERNAL_SERVER_ERROR
      message:
        type: string
        example: Sorry, an unexpected error has occurred
